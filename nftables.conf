flush ruleset

table inet filter {
	chain input {
		type filter hook input priority 0; policy drop;
		iif "lo" accept

	        # ICMP ping dealt with separately to rate limit
		ip6 nexthdr icmpv6 icmpv6 type echo-request limit rate 1/second accept
		ip6 nexthdr icmpv6 icmpv6 type echo-request counter drop
		ip protocol icmp icmp type echo-request limit rate 1/second accept
		ip protocol icmp icmp type echo-request counter drop
		ip6 nexthdr icmpv6 icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem, echo-reply, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert } accept
		ip protocol icmp icmp type { destination-unreachable, router-advertisement, time-exceeded, parameter-problem } accept
		ct state established,related accept
		ct state invalid drop
		ip protocol igmp accept
		tcp dport { ssh, http, https } ct state new accept
#		tcp dport 80 meter http1 { tcp dport . ip saddr limit rate over 200/second } counter drop
	}
	chain forward {
		type filter hook forward priority 0; policy accept;
	}
	chain output {
		type filter hook output priority 0; policy accept;
	}
}

table ip ddos_protect {
	set deepsix {
		type ipv4_addr
		flags timeout
		#size 65536
	}
	chain input {
		type filter hook input priority 0; #policy drop;
		meta iifname "internal" accept
		ip saddr @deepsix counter drop
		tcp dport http meter http2 { ip saddr limit rate over 10/second } set update ip saddr timeout 1m @deepsix drop
	}
}
